name: Publish

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
    
      - name: Start dependencies (docker-compose)
        run: |
          docker compose --file docker-compose-staging.yml up -d 
        working-directory: .

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
    
      - name: Restore NuGet packages Auth
        run: dotnet restore
        working-directory: ./Microservices/AuthService
          
      - name: Restore NuGet packages Users
        run: dotnet restore
        working-directory: ./Microservices/UsersService
        
      - name: Restore NuGet packages Devices
        run: dotnet restore
        working-directory: ./Microservices/DevicesService
        
      - name: Restore NuGet packages Notifications
        run: dotnet restore
        working-directory: ./Microservices/NotificationService
        
      - name: Restore NuGet packages Statistics
        run: dotnet restore
        working-directory: ./Microservices/StatisticsService
        
      - name: Build Auth
        run: dotnet build -c Release --no-restore
        working-directory: ./Microservices/AuthService
        
      - name: Build Users
        run: dotnet build -c Release --no-restore
        working-directory: ./Microservices/UsersService
        
      - name: Build Devices
        run: dotnet build -c Release --no-restore
        working-directory: ./Microservices/DevicesService
        
      - name: Build Notifications
        run: dotnet build -c Release --no-restore
        working-directory: ./Microservices/NotificationService
        
      - name: Builds Statistics
        run: dotnet build -c Release --no-restore
        working-directory: ./Microservices/StatisticsService
        
      - name: Publish Auth
        run: dotnet publish -c Release --no-build --no-restore
        working-directory: ./Microservices/AuthService
        
      - name: Publish Users
        run: dotnet publish -c Release --no-build --no-restore
        working-directory: ./Microservices/UsersService
        
      - name: Publish Devices
        run: dotnet publish -c Release --no-build --no-restore
        working-directory: ./Microservices/DevicesService
        
      - name: Publish Notifications
        run: dotnet publish -c Release --no-build --no-restore
        working-directory: ./Microservices/NotificationService
        
      - name: Publish Statistics
        run: dotnet publish -c Release --no-build --no-restore
        working-directory: ./Microservices/StatisticsService
        
        # Deploy to Azure
        
      - name: Azure Login FrontEnd
        uses: azure/login@v1
        with:
          creds: ${{ secrets.IOTHUBFRONTEND_AZURE_CREDENTIALS }}
          
      - name: Build and push container image to registry FrontEnd
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}/WebSinglePageAngularApp
          registryUrl: docker.io
          registryUsername: ${{ secrets.IOTHUBFRONTEND_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.IOTHUBFRONTEND_REGISTRY_PASSWORD }}
          containerAppName: iothub-frontend
          resourceGroup: disertatie
          imageToBuild: cristian25/iothub-frontend:${{ github.sha }}
          dockerfilePath: Dockerfile.linux.prod
        
        
      - name: Azure Login Auth Service
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AUTHSERVICE_AZURE_CREDENTIALS }}

      - name: Build and push container image to registry Auth Service
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}/Microservices/AuthService
          registryUrl: docker.io
          registryUsername: ${{ secrets.AUTHSERVICE_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.AUTHSERVICE_REGISTRY_PASSWORD }}
          containerAppName: authservice
          resourceGroup: disertatie
          imageToBuild: cristian25/authservice:${{ github.sha }}
          dockerfilePath: /AuthService/Dockerfile
          
          
      - name: Azure Login Users Service
        uses: azure/login@v1
        with:
          creds: ${{ secrets.USERSSERVICE_AZURE_CREDENTIALS }}

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}/Microservices/UsersService
          registryUrl: docker.io
          registryUsername: ${{ secrets.USERSSERVICE_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.USERSSERVICE_REGISTRY_PASSWORD }}
          containerAppName: usersservice
          resourceGroup: disertatie
          imageToBuild: cristian25/usersservice:${{ github.sha }}
          dockerfilePath: /UsersService/Dockerfile
          
          
      - name: Azure Login Devices Service
        uses: azure/login@v1
        with:
          creds: ${{ secrets.DEVICESSERVICE_AZURE_CREDENTIALS }}

      - name: Build and push container image to registry Devices Service
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ github.workspace }}/Microservices/DevicesService
          registryUrl: docker.io
          registryUsername: ${{ secrets.DEVICESSERVICE_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.DEVICESSERVICE_REGISTRY_PASSWORD }}
          containerAppName: devicesservice
          resourceGroup: disertatie
          imageToBuild: cristian25/devicesservice:${{ github.sha }}
          dockerfilePath: /DevicesService/Dockerfile
      
